{
  "name": "docca-builder",
  "version": "0.0.1",
  "description": "renders Docca markup documents with data and converts to PDF using the Docca server",
  "main": "dist/index.js",
  "author": "jason@docca.io",
  "license": "MIT",
  "scripts": {
    "prepublishOnly": "npm run compile",
    "start": "NODE_ENV=development babel-watch src/index.js | bunyan --output short",
    "serve": "node dist/index.js",
    "clean:dist": "rm -rf dist/",
    "compile:dist": "babel src/ --out-dir dist/ --source-maps true",
    "compile": "npm run clean:dist && npm run compile:dist",
    "lint": "eslint ./src",
    "test": "jest"
  },
  "dependencies": {
    "body-parser": "^1.17.1",
    "bunyan": "^1.8.9",
    "bunyan-request-logger": "^1.1.0",
    "copin": "^0.0.6",
    "express": "^4.15.2",
    "lodash": "^4.17.4",
    "preact": "^8.1.0",
    "request": "^2.81.0"
  },
  "babel": {
    "presets": [
      "es2015-node6"
    ],
    "plugins": [
      "transform-object-rest-spread",
      [
        "babel-plugin-transform-react-jsx",
        {
          "pragma": "h"
        }
      ]
    ]
  },
  "devDependencies": {
    "babel-cli": "^6.16.0",
    "babel-core": "^6.17.0",
    "babel-eslint": "^7.2.1",
    "babel-jest": "^19.0.0",
    "babel-plugin-transform-object-rest-spread": "^6.16.0",
    "babel-plugin-transform-react-jsx": "^6.23.0",
    "babel-preset-es2015-node6": "^0.4.0",
    "babel-watch": "^2.0.3",
    "eslint": "^3.18.0",
    "eslint-config-standard": "^10.2.1",
    "eslint-config-standard-preact": "^1.0.1",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-node": "^4.2.2",
    "eslint-plugin-promise": "^3.5.0",
    "eslint-plugin-react": "^6.10.3",
    "eslint-plugin-standard": "^3.0.1",
    "jest": "^19.0.2"
  },
  "jest": {
    "testEnvironment": "node",
    "verbose": true,
    "testPathIgnorePatterns": [ "/node_modules/", "/dist/" ]
  },
  "eslintConfig": {
    "parser": "babel-eslint",
    "extends": [
      "standard",
      "standard-preact"
    ],
    "env": {
      "jest": true
    },
    "rules": {
      "curly": [
        "error",
        "all"
      ],
      "brace-style": [
        "error",
        "1tbs"
      ],
      "semi": [
        "error",
        "always",
        {
          "omitLastInOneLineBlock": true
        }
      ]
    }
  }
}
